// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "eigakanban developers",
            "url": "https://codeberg.org/sporiff/eigakanban/issues",
            "email": "~sporiff/eigakanban@lists.sr.ht"
        },
        "license": {
            "name": "AGPL3 or Later",
            "url": "https://codeberg.org/sporiff/eigakanban/src/branch/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Log in to user account using email or username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in",
                "parameters": [
                    {
                        "description": "Login details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "$ref": "#/definitions/types.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Missing mandatory fields",
                        "schema": {
                            "$ref": "#/definitions/types.MissingFieldResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/types.UserNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Log out of the app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh token",
                        "name": "Refresh-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "$ref": "#/definitions/types.LogoutSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Missing refresh token",
                        "schema": {
                            "$ref": "#/definitions/types.RefreshTokenMissingResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Log out of the app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh token",
                        "name": "Refresh-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "$ref": "#/definitions/types.LogoutSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Missing refresh token",
                        "schema": {
                            "$ref": "#/definitions/types.RefreshTokenMissingResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user account",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/types.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Missing mandatory fields",
                        "schema": {
                            "$ref": "#/definitions/types.MissingFieldResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all items in a paginated list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get all items",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.PaginatedItemsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Add a new item",
                "parameters": [
                    {
                        "description": "Item details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AddItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item added successfully",
                        "schema": {
                            "$ref": "#/definitions/types.ItemsResponse"
                        }
                    },
                    "400": {
                        "description": "Missing mandatory fields",
                        "schema": {
                            "$ref": "#/definitions/types.MissingFieldResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/{uuid}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get an item by UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get item by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ItemsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an item by UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Delete item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Board UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Board deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/types.ItemDeletedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update item details by UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Update item details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Item details to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ItemsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/list_items": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all list items in a paginated list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "list_items"
                ],
                "summary": "Get all list items",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.PaginatedListItemsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lists/{uuid}/items": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all items in a list as a paginated list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lists"
                ],
                "summary": "Get all items in a list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.PaginatedListItemsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search for movies on TMDB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search for movies on TMDB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.PaginatedListItemsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/statuses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetch all statuses as a paginated list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "statuses"
                ],
                "summary": "Fetch all statuses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statuses",
                        "schema": {
                            "$ref": "#/definitions/types.PaginatedStatusesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statuses"
                ],
                "summary": "Add a new status",
                "parameters": [
                    {
                        "description": "Status details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AddStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status added successfully",
                        "schema": {
                            "$ref": "#/definitions/types.StatusesResponse"
                        }
                    },
                    "400": {
                        "description": "Missing mandatory fields",
                        "schema": {
                            "$ref": "#/definitions/types.MissingFieldResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all users in a paginated list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.PaginatedUsersResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{uuid}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a user by UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a user by UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/types.UserDeletedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user details by UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User details to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.AddItemRequest": {
            "description": "a request body for adding a new item",
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "example": "Item title"
                }
            }
        },
        "types.AddStatusRequest": {
            "description": "A request body for adding a new status",
            "type": "object",
            "required": [
                "label"
            ],
            "properties": {
                "label": {
                    "type": "string",
                    "example": "test"
                }
            }
        },
        "types.AlreadyLoggedOutResponse": {
            "description": "user already logged out",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "already logged out"
                }
            }
        },
        "types.ErrorResponse": {
            "description": "an unknown error",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "internal server error"
                }
            }
        },
        "types.ItemDeletedResponse": {
            "description": "A success message confirming the item was deleted",
            "type": "object",
            "properties": {
                "success": {
                    "type": "string",
                    "example": "Item deleted: 77b62cff-0020-43d9-a90c-5d35bff89f7a"
                }
            }
        },
        "types.ItemsResponse": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "example": "Item title"
                },
                "uuid": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "types.ListItemsResponse": {
            "type": "object",
            "properties": {
                "item_uuid": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000002"
                },
                "list_uuid": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000001"
                },
                "position": {
                    "type": "integer",
                    "example": 0
                },
                "status": {
                    "type": "string",
                    "example": "Backlog"
                },
                "uuid": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "types.LoginUserRequest": {
            "description": "request body for a login request. either email or username must be provided",
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "test"
                }
            }
        },
        "types.LogoutSuccessResponse": {
            "description": "user logged out successfully",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "logged out successfully"
                }
            }
        },
        "types.MissingFieldResponse": {
            "description": "an example of a missing field response an example of a missing field response",
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "username": {
                            "type": "string",
                            "example": "This field is required"
                        }
                    }
                }
            }
        },
        "types.PaginatedItemsResponse": {
            "description": "a response containing a list of items and a pagination object",
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ItemsResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/types.Pagination"
                }
            }
        },
        "types.PaginatedListItemsResponse": {
            "type": "object",
            "properties": {
                "list_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ListItemsResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/types.Pagination"
                }
            }
        },
        "types.PaginatedStatusesResponse": {
            "description": "a paginated list of statuses",
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/types.Pagination"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.StatusesResponse"
                    }
                }
            }
        },
        "types.PaginatedUsersResponse": {
            "description": "a response containing a list of users and a pagination object",
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/types.Pagination"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.UserResponse"
                    }
                }
            }
        },
        "types.Pagination": {
            "description": "pagination information",
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 50
                },
                "total": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "types.RefreshTokenMissingResponse": {
            "description": "refresh token missing",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "refresh token missing"
                }
            }
        },
        "types.RegisterUserRequest": {
            "description": "A request body for registering a new user",
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "test"
                }
            }
        },
        "types.StatusesResponse": {
            "description": "status details",
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "example": "backlog"
                },
                "uuid": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "types.TokenResponse": {
            "description": "a response containing a JWT for authentication and a refresh token",
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "expiry_date": {
                    "type": "string",
                    "example": "2025-02-15 11:59:01.837871 +0100 CET m=+3603.614509085"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "types.UpdateItemRequest": {
            "description": "a request body for updating an item",
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "example": "Item title"
                }
            }
        },
        "types.UpdateUserRequest": {
            "description": "a request body for updating a user",
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string",
                    "example": "This is a bio"
                },
                "full_name": {
                    "type": "string",
                    "example": "Tim Test"
                },
                "username": {
                    "type": "string",
                    "example": "new_username"
                }
            }
        },
        "types.UserDeletedResponse": {
            "description": "A success message confirming the user was deleted",
            "type": "object",
            "properties": {
                "success": {
                    "type": "string",
                    "example": "user deleted: 77b62cff-0020-43d9-a90c-5d35bff89f7a"
                }
            }
        },
        "types.UserNotFoundResponse": {
            "description": "User not found",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "user not found"
                }
            }
        },
        "types.UserResponse": {
            "description": "JSON representation of a user in the system",
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string",
                    "example": "This is a bio"
                },
                "full_name": {
                    "type": "string",
                    "example": "Tim Test"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                },
                "uuid": {
                    "type": "string",
                    "example": "77b62cff-0020-43d9-a90c-5d35bff89f7a"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "eigakanban API",
	Description:      "The REST API for the eigakanban server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
